// 左右键逻辑专用
//public override Vector2? HoldoutOffset() => new Vector2(-10, 0);

//public override bool CanUseItem(Player player)
//{
//    if (player.altFunctionUse == 2) // 如果是右键
//    {
//        Item.useTime = Item.useAnimation = 10; // 调整右键使用速度
//        Item.shoot = ProjectileID.Flames ; // 发射 x
//        Item.shootSpeed = 8f; // 调整右键弹幕速度
//        Item.useAmmo = AmmoID.Gel; // 右键消耗凝胶弹药
//        Item.useTime = 3;
//        Item.useAnimation = 24;
//        Item.channel = false;
//    }
//    else // 左键
//    {
//        Item.useTime = Item.useAnimation = OriginalUseTime;
//        Item.shoot = ModContent.ProjectileType<TheGoldenFireHoldOut>();
//        Item.shootSpeed = 15f;
//        Item.useAmmo = AmmoID.Gel;
//        Item.channel = true;
//        Item.useTime = Item.useAnimation = OriginalUseTime;
//    }
//    return base.CanUseItem(player);
//}


//public override bool Shoot(Player player, Terraria.DataStructures.EntitySource_ItemUse_WithAmmo source, Vector2 position, Vector2 velocity, int type, int damage, float knockback)
//{
//    if (player.altFunctionUse == 2) // 右键逻辑
//    {
//        Vector2 newPos = position + velocity.SafeNormalize(Vector2.UnitX) * 36f;
//        Color gelColor = GetGelColor(player); // 获取当前凝胶颜色
//        for (int i = 0; i < 3; i++) // 发射三颗火焰弹幕
//        {
//            Vector2 newVel = velocity.RotatedByRandom(MathHelper.ToRadians(5f)); // 随机角度偏移
//            int projID = Projectile.NewProjectile(source, newPos, newVel, type, damage, knockback, player.whoAmI);
//            Main.projectile[projID].localAI[0] = gelColor.R; // 存储 R 通道值
//            Main.projectile[projID].localAI[1] = gelColor.G; // 存储 G 通道值
//            Main.projectile[projID].ai[0] = gelColor.B;       // 存储 B 通道值
//        }
//        return false;
//    }
//    else // 左键逻辑
//    {
//        Projectile.NewProjectileDirect(
//            source,
//            player.MountedCenter,
//            Vector2.Zero,
//            ModContent.ProjectileType<TheGoldenFireHoldOut>(),
//            Item.damage,
//            Item.knockBack,
//            player.whoAmI
//        ).velocity = (player.Calamity().mouseWorld - player.MountedCenter).SafeNormalize(Vector2.Zero);
//        return false;
//    }
//}